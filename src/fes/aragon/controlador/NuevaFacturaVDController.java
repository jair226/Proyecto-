package fes.aragon.controlador;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;

import java.net.URL;
import java.util.ResourceBundle;

import fes.aragon.modelo.Clientes;
import fes.aragon.modelo.Facturas;
import fes.aragon.mysql.Conexion;
import javafx.event.ActionEvent;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.DatePicker;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class NuevaFacturaVDController implements Initializable {
	@FXML
	private TextField txtReferrenciaFacturaVD;
	@FXML
	private DatePicker txtFechaNuevaFactVD;
	@FXML
	private TextField txtNombreFactVD;
	@FXML
	private TextField txtApellidoFactVD;
	@FXML
	private TableView<Clientes> tblTablaCliente;
	@FXML
	private TableColumn<Clientes, Integer> clienteID;
	@FXML
	private TableColumn<Clientes, String> clienteNombre;
	@FXML
	private TableColumn<Clientes, String> clienteApellidoPa;
	
    @FXML // fx:id="txtClienteBuscar"
    private TextField txtClienteBuscar; // Value injected by FXMLLoader
	
	 @FXML // fx:id="btnBuscar"
	    private Button btnBuscar; // Value injected by FXMLLoader


	@FXML
	private Facturas factura = new Facturas();
	Clientes cliente=new Clientes();

	// Event Listener on Button.onAction
	@FXML
	public void buscarCliente(ActionEvent event) {
		// TODO Autogenerated
    		try {
    		Conexion cnn = new Conexion();
    		
    		this.tblTablaCliente.getItems().clear();
			this.tblTablaCliente.setItems(cnn.buscarClientes(this.txtClienteBuscar.getText()));
    		} catch (Exception e) {
    			Alert alert = new Alert(Alert.AlertType.INFORMATION);
    			alert.setHeaderText("Error al buscar el cliente");
    			alert.setContentText("El cliente no existe");
    			alert.showAndWait();
    			e.printStackTrace();
    		}
		}



	// Event Listener on Button.onAction
	@FXML
	public void accionGuardarFactVD(ActionEvent event) {
	
		try {
			Conexion cnn = new Conexion();
			Alert msg = new Alert(Alert.AlertType.INFORMATION);
			factura.setReferencia(txtReferrenciaFacturaVD.getText());
			factura.setFecha(txtFechaNuevaFactVD.getValue());
			cnn.almacenarFacturas(factura);
			msg.setHeaderText("Factura almacenada");
    		msg.setContentText("La factura se almaceno correctamente");
    		msg.showAndWait();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			Alert alerta = new Alert(Alert.AlertType.INFORMATION);
			alerta.setHeaderText(null);
			alerta.setContentText("Error, ocurrio un problema");
			alerta.showAndWait();
			e.printStackTrace();
		}
		

	}

	// Event Listener on Button.onAction
	@FXML
	public void accionLimpiarFactVD(ActionEvent event) {
		// TODO Autogenerated
		this.limpiar();
	}
	
	
	
//TABLA CLIENTES
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		this.clienteID.setCellValueFactory(new PropertyValueFactory<>("IdC"));
		this.clienteNombre.setCellValueFactory(new PropertyValueFactory<>("nombre"));
		this.clienteApellidoPa.setCellValueFactory(new PropertyValueFactory<>("apellidoPaterno"));
		
		this.tblTablaCliente.getSelectionModel().selectedItemProperty()
				.addListener((obj, oldSeleccion, newSeleccion) -> {
					if (newSeleccion != null) {
						Clientes cl = tblTablaCliente.getSelectionModel().getSelectedItem();
						txtNombreFactVD.setText(cl.getNombre());
						txtApellidoFactVD.setText(cl.getApellidoPaterno());
						System.out.println("ClienteId:" + cl.getIdC());
						factura.setCliente(cl);
				
					}
				});

		//this.traerDatosC();
	}

	private void traerDatosC() {
		try {
			Conexion cnn = new Conexion();
			this.tblTablaCliente.getItems().clear();
			this.tblTablaCliente.setItems(cnn.todosClientes());
		} catch (Exception e) {
			// TODO Auto-generated catch block
			Alert alerta = new Alert(Alert.AlertType.WARNING);
			alerta.setTitle("Problema en B.D");
			alerta.setHeaderText("Error en la app");
			alerta.setContentText("Consulta al fabricante please");
			alerta.showAndWait();
			e.printStackTrace();
		}
	}
	
	private void limpiar() {
		this.txtReferrenciaFacturaVD.setText("");
		this.txtFechaNuevaFactVD.setValue(null);
		this.txtClienteBuscar.setText("");
		this.txtNombreFactVD.setText("");
		this.txtApellidoFactVD.setText("");
		
	}
	
}
