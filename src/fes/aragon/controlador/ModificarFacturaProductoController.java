package fes.aragon.controlador;

import java.net.URL;
import java.time.LocalDate;
import java.util.ResourceBundle;

import fes.aragon.modelo.Clientes;
import fes.aragon.modelo.Facturas;
import fes.aragon.modelo.FacturasProductos;
import fes.aragon.modelo.Productos;
import fes.aragon.mysql.Conexion;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.scene.control.Alert;
import javafx.scene.control.DatePicker;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class ModificarFacturaProductoController implements Initializable {
	@FXML
	private TextField txtReferencia;
	@FXML
	private DatePicker txtFecha;
	@FXML
	private TextField txtFactura;
	@FXML
	private TableView<Facturas> tblFacutrasProductos;
	@FXML
	private TableColumn <Facturas,Integer>columnIDFactura;
	@FXML
	private TableColumn<Facturas,String> columReferencia;
	@FXML
	private TableColumn <Facturas,LocalDate>columnFecha;
 
	@FXML
	private TableColumn<Clientes,String> columnNombre;
	@FXML
	private TableColumn<Clientes,String> columnApaterno;
	@FXML
	private TextField txtNombreProducto;
	@FXML
	private TextField txtPrecio;
	@FXML
	private TextField txtCantidad;
	@FXML
	private TextField txtBucarProducto;
	@FXML
	private TableView<Productos> tblProducto;
	@FXML
	private TableColumn<Productos,Integer> columnIDProducto;
	@FXML
	private TableColumn<Productos,String> columnNombreProducto;
	@FXML
	private TableColumn <Productos,Double>columnPrecio;
	
	
	private Facturas factura = new Facturas();
	private Clientes cliente = new Clientes();
	private Productos producto = new Productos();
	private FacturasProductos factpro = new FacturasProductos();

	// Event Listener on Button.onMouseClicked
	@FXML
	public void accionBucarFactura(MouseEvent event) {
		// TODO Autogenerated
		try {
    		Conexion cnn = new Conexion();
    		this.tblFacutrasProductos.getItems().clear();
			this.tblFacutrasProductos.setItems(cnn.buscarFacturas(this.txtFactura.getText()));
    		} catch (Exception e) {
    			Alert alert = new Alert(Alert.AlertType.INFORMATION);
    			alert.setHeaderText("Error al buscar el cliente");
    			alert.setContentText("El cliente no existe");
    			alert.showAndWait();
    			e.printStackTrace();
    		}
	}
	// Event Listener on Button.onMouseClicked
	@FXML
	public void accionBucarProducto(MouseEvent event) {
		// TODO Autogenerated
		try {
    		Conexion cnn = new Conexion();
    		
    		this.tblProducto.getItems().clear();
			this.tblProducto.setItems(cnn.buscarProductos(this.txtBucarProducto.getText()));
    		} catch (Exception e) {
    			Alert alert = new Alert(Alert.AlertType.INFORMATION);
    			alert.setHeaderText("Error al buscar el cliente");
    			alert.setContentText("El cliente no existe");
    			alert.showAndWait();
    			e.printStackTrace();
    		}
		
	}
	// Event Listener on Button.onMouseClicked
	@FXML
	public void accionGuardarFactura(MouseEvent event) {
		// TODO Autogenerated
		try {
			Conexion cnn = new Conexion();
			Alert msg = new Alert(Alert.AlertType.INFORMATION);
			Facturas ft=this.tblFacutrasProductos.getSelectionModel().getSelectedItem();
			if(ft!=null) {
			factpro.getFactura().setId(ft.getId());
			}
			Productos pt=this.tblProducto.getSelectionModel().getSelectedItem();
			if(pt!=null) {
			factpro.getProducto().setId_productos(pt.getId_productos());
			}
			factpro.setCantidad_facturas_productos(Double.parseDouble(txtCantidad.getText()));
			cnn.modificarFacturasProductos(factpro);
			msg.setHeaderText("Factura Modificada");
    		msg.setContentText("La factura se Modifico correctamente");
    		msg.showAndWait();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			Alert alerta = new Alert(Alert.AlertType.INFORMATION);
			alerta.setHeaderText(null);
			alerta.setContentText("Error, ocurrio un problema");
			alerta.showAndWait();
			e.printStackTrace();
		}
	}
	// Event Listener on Button.onMouseClicked
	@FXML
	public void accionLimpiar(MouseEvent event) {
		// TODO Autogenerated
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		//TABLA Facturas
		
		this.columnIDFactura.setCellValueFactory(new PropertyValueFactory<>("id"));
		this.columReferencia.setCellValueFactory(new PropertyValueFactory<>("referencia"));
		this.columnFecha.setCellValueFactory(new PropertyValueFactory<>("fecha"));
		this.columnNombre.setCellValueFactory(new PropertyValueFactory<>("nombre"));
		this.columnApaterno.setCellValueFactory(new PropertyValueFactory<>("apellido"));
		this.tblFacutrasProductos.getSelectionModel().selectedItemProperty()
				.addListener((obj, oldSeleccion, newSeleccion) -> {
					if (newSeleccion != null) {
						Facturas fact = tblFacutrasProductos.getSelectionModel().getSelectedItem();
						txtReferencia.setText(fact.getReferencia());
						txtFecha.setValue(fact.getFecha());
						factpro.setFactura(fact);
					}
				});
				
		//TABLA productos
		this.columnIDProducto.setCellValueFactory(new PropertyValueFactory<>("id_productos"));
		this.columnNombreProducto.setCellValueFactory(new PropertyValueFactory<>("nombre_productos"));
		this.columnPrecio.setCellValueFactory(new PropertyValueFactory<>("precio_productos"));
		this.tblProducto.getSelectionModel().selectedItemProperty()
				.addListener((obj, oldSeleccion, newSeleccion) -> {
					if (newSeleccion != null) {
						Productos pro = tblProducto.getSelectionModel().getSelectedItem();
						txtNombreProducto.setText(pro.getNombre_productos());
						txtPrecio.setText(pro.getPrecio_productos().toString());
						factpro.setProducto(pro);
				
					}
				});
		//this.traerDatosC();
	}
	
	public void modificarFacturasProductos(FacturasProductos factpro) {
		this.factpro=factpro;
		this.txtReferencia.setText(factpro.getReferencia());
		this.txtFecha.setValue(factpro.getFecha());
		this.txtNombreProducto.setText(factpro.getNombre_productos());
		this.txtPrecio.setText(String.valueOf(factpro.getPrecio_productos()));
		this.txtCantidad.setText(String.valueOf(factpro.getCantidad_facturas_productos()));
	
	}
}
